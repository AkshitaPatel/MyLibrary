<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8">
    <link href="https://unpkg.com/filepond/dist/filepond.css" rel="stylesheet">
    <link href="https://unpkg.com/filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css" rel="stylesheet">
    <link id="main-css" rel="stylesheet" href="/stylesheets/main.css">
    <title>MyLibrary</title>
  </head>
  <body>

    <div class="container">
      <%- include('../partials/header.ejs') %>
      <div class="inner-container">
        <%- include('../partials/errorMessage.ejs') %>
        <%- body %>


      </div>

    </div>



    <script src="https://unpkg.com/filepond-plugin-file-encode/dist/filepond-plugin-file-encode.js"></script>
    <script src="https://unpkg.com/filepond-plugin-image-preview/dist/filepond-plugin-image-preview.js"></script>
    <script src="https://unpkg.com/filepond-plugin-image-resize/dist/filepond-plugin-image-resize.js"></script>
    <script src="https://unpkg.com/filepond/dist/filepond.js"></script>
    <script type="text/javascript">
    const rootStyles = window.getComputedStyle(document.documentElement)

    if (rootStyles.getPropertyValue('--book-cover-width-large') != null && rootStyles.getPropertyValue('--book-cover-width-large') !== '') {
      ready()
    } else {
      document.getElementById('main-css').addEventListener('load', ready)
    }

    function ready() {
      const coverWidth = parseFloat(rootStyles.getPropertyValue('--book-cover-width-large'))
      const coverAspectRatio = parseFloat(rootStyles.getPropertyValue('--book-cover-aspect-ratio'))
      const coverHeight = coverWidth / coverAspectRatio
      FilePond.registerPlugin(
        FilePondPluginImagePreview,
        FilePondPluginImageResize,
        FilePondPluginFileEncode,
      )

      FilePond.setOptions({
        stylePanelAspectRatio: 1 / coverAspectRatio,
        imageResizeTargetWidth: coverWidth,
        imageResizeTargetHeight: coverHeight
      })

    FilePond.parse(document.body)
}
    // const rootStyles = window.getComputedStyle(document.documentElement);
    //
    // if(rootStyles.getPropertyValue('--book-cover-width-large') != null && rootStyles.getPropertyValue('--book-cover-width-large') !== ''){
    //   ready()
    // }else{
    //   document.getElementById('main-css').addEventListener('load', ready);
    // }
    //
    // function ready(){
    //   const coverWidth = parseFloat(rootStyles.getPropertyValue('--book-cover-width-large'));
    //   const coverAspectRatio = parseFloat(rootStyles.getPropertyValue('--book-cover-aspect-ratio'));
    //   const coverHeight = coverWidth / aspectRatio;
    //   FilePond.registerPlugin(FilePondPluginImagePreview);
    //   FilePond.registerPlugin(FilePondPluginImageResize);
    //   FilePond.registerPlugin(FilePondPluginFileEncode);
    //   FilePond.setOptions({
    //     stylePanelAspectRatio: 1 / coverAspectRatio,
    //     imageResizeTargetWidth : coverWidth,
    //     imageResizeTargetHeight : coverHeight
    //
    //   });
    //
    // }


    const inputElement = document.querySelector('input[type="file"]');
    const pond = FilePond.create(inputElement);
    FilePond.parse(document.body);

    </script>

  </body>
</html>
